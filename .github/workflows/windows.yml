name: Windows
on:
  push:
    paths-ignore:
      - 'docs/**'
      - 'LICENSE'
      - 'README.md'
jobs:
  ninja:
    name: Ninja
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - renderer: vulkan
            config: Release
          - renderer: vulkan
            config: Debug
          - renderer: opengl
            config: Release
          - renderer: opengl
            config: Debug
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - uses: seanmiddleditch/gha-setup-vsdevenv@master
      - name: Install prerequisites
        run: |
          cinst ninja
          if ( '${{ matrix.renderer }}' -eq 'vulkan' ) { cinst vulkan-sdk }
      - name: Run CMake
        env:
          CMAKE_GENERATOR: Ninja
        run: |
          if ( '${{ matrix.renderer }}' -eq 'vulkan' ) { $Env:VULKAN_SDK = "C:\VulkanSDK\$(Get-ChildItem 'C:\VulkanSDK' -Name)" }
          cmake -S . -B build `
            -DCMAKE_BUILD_TYPE=${{ matrix.config }} `
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}\install" `
            -DYTTRIUM_AUDIO_AULOS=ON `
            -DYTTRIUM_AUDIO_OGGVORBIS=ON `
            -DYTTRIUM_AUDIO_WAV=ON `
            -DYTTRIUM_IMAGE_BMP=ON `
            -DYTTRIUM_IMAGE_DDS=ON `
            -DYTTRIUM_IMAGE_ICO=ON `
            -DYTTRIUM_IMAGE_JPEG=ON `
            -DYTTRIUM_IMAGE_PNG=ON `
            -DYTTRIUM_IMAGE_TGA=ON `
            -DYTTRIUM_RENDERER=${{ matrix.renderer }} `
            -DYTTRIUM_TESTS=ON
      - name: Build
        run: |
          cmake --build build
          cmake --build build --target install
      - name: Run tests
        run: |
          cd build
          ctest --verbose
  visual-studio:
    # This job builds the project from Visual Studio solution generated by CMake.
    # It ensures it is a valid way to build Yttrium.
    name: Visual Studio
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run CMake
        env:
          CMAKE_GENERATOR: Visual Studio 16 2019
          CMAKE_GENERATOR_PLATFORM: Win32
        run: |
          cmake -S . -B build `
            -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}\install" `
            -DYTTRIUM_RENDERER=none
      - name: Build
        run: |
          cmake --build build --config Debug --parallel -- /nologo
          cmake --build build --config RelWithDebInfo --parallel -- /nologo
          cmake --build build --config RelWithDebInfo --target install -- /nologo
