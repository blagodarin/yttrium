Import('env', 'ports')

build = env.Clone(BUILD = '.build')
build.Append(CPPFLAGS = ['-fno-exceptions']) # We use GCC/MinGW.
build.VariantDir('$BUILD', '.', duplicate = 0)

src = [
	'audio',
	'audio/backend',
	'audio/backend/openal',
	'audio/io',
	'base',
	'base/memory',
	'file_system',
	'image',
	'ion']

if 'posix' in ports:
	src += ['base/posix']

if 'windows' in ports:
	src += ['base/windows']

yttrium = build.SharedLibrary('#/lib/yttrium', [build.Glob('$BUILD/' + path + '/*.cpp') for path in src])
build.Clean(yttrium, build.Dir('$BUILD'))

Return('yttrium')
