Import('env', 'ports')

build = env.Clone(BUILD = '#/tmp/src')
build.Append(CPPFLAGS = ['-fno-exceptions']) # We use GCC/MinGW.
build.VariantDir('$BUILD', '.', duplicate = 0)

src = [
	'audio',
	'audio/backend',
	'audio/backend/openal',
	'audio/io',
	'base',
	'base/memory',
	'gui',
	'gui/ion',
	'gui/logic',
	'gui/widgets',
	'renderer',
	'renderer/backend',
	'renderer/backend/gl',
	'renderer/builtin',
	'script',
	'terminal',
	'terminal/bindings',
	'image',
	'ion',
	'math',
	'package']

if 'posix' in ports:
	src += [
		'base/posix']

if 'windows' in ports:
	src += [
		'base/windows',
		'terminal/windows']

if 'x11' in ports:
	src += [
		'terminal/x11']

yttrium = build.SharedLibrary('#/lib/yttrium', [build.Glob('$BUILD/' + path + '/*.cpp') for path in src])
build.Clean(yttrium, build.Dir('$BUILD'))

Return('yttrium')
