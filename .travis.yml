language: cpp
dist: trusty
sudo: false

git:
  depth: 1

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-6
      - libopenal-dev
      - libvorbis-dev
      - libxcb-image0-dev

matrix:
  include:
    - os: linux
      compiler: gcc
      env: GCC_VERSION=6 RENDERER=Null COVERAGE=1
    - os: linux
      compiler: gcc
      env: GCC_VERSION=6 RENDERER=OpenGL
    - os: linux
      compiler: gcc
      env: GCC_VERSION=6 RENDERER=Vulkan

before_install:
  - if [ "${GCC_VERSION}" != "" ]; then export CC=gcc-$GCC_VERSION CXX=g++-$GCC_VERSION GCOV=gcov-$GCC_VERSION; fi

install:
  - mkdir ${TRAVIS_BUILD_DIR}/travis

  - mkdir ${TRAVIS_BUILD_DIR}/travis/boost && pushd ${TRAVIS_BUILD_DIR}/travis/boost
  - wget -q -O - https://dl.bintray.com/boostorg/release/1.65.1/source/boost_1_65_1.tar.bz2 | tar -xj --strip-components 1
  - ./bootstrap.sh
  - ./b2 headers
  - ./b2 -j2 --with-test
  - CMAKE_OPTIONS+=" -DBOOST_ROOT=$(pwd)"
  - popd

  - mkdir ${TRAVIS_BUILD_DIR}/travis/cmake && pushd ${TRAVIS_BUILD_DIR}/travis/cmake
  - wget -q --no-check-certificate -O - https://cmake.org/files/v3.9/cmake-3.9.3-Linux-x86_64.tar.gz | tar -xz --strip-components 1
  - export PATH=$(pwd)/bin:${PATH}
  - popd

  - if [ "${RENDERER}" = "Vulkan" ]; then git clone https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers && pushd Vulkan-LoaderAndValidationLayers; fi
  - if [ "${RENDERER}" = "Vulkan" ]; then cmake -H. -Bdbuild -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=${TRAVIS_BUILD_DIR}/vulkan -DBUILD_DEMOS=OFF -DBUILD_LAYERS=OFF -DBUILD_TESTS=OFF -DBUILD_VKJSON=OFF -DBUILD_WSI_MIR_SUPPORT=OFF -DBUILD_WSI_WAYLAND_SUPPORT=OFF -DBUILD_WSI_XLIB_SUPPORT=OFF; fi
  - if [ "${RENDERER}" = "Vulkan" ]; then cd dbuild; fi
  - if [ "${RENDERER}" = "Vulkan" ]; then make -j2; fi
  - if [ "${RENDERER}" = "Vulkan" ]; then make install; fi
  - if [ "${RENDERER}" = "Vulkan" ]; then export VULKAN_SDK=${TRAVIS_BUILD_DIR}/vulkan; fi
  - if [ "${RENDERER}" = "Vulkan" ]; then popd; fi

script:
  - if [ "${RENDERER}" = "Vulkan" ]; then pushd ${TRAVIS_BUILD_DIR}/3rdparty/glslang; fi
  - if [ "${RENDERER}" = "Vulkan" ]; then cmake . -DCMAKE_INSTALL_PREFIX=$(cd ..; pwd) -DENABLE_AMD_EXTENSIONS=OFF -DENABLE_GLSLANG_BINARIES=OFF -DENABLE_HLSL=OFF -DENABLE_NV_EXTENSIONS=OFF; fi
  - if [ "${RENDERER}" = "Vulkan" ]; then make -j2; fi
  - if [ "${RENDERER}" = "Vulkan" ]; then make install; fi
  - if [ "${RENDERER}" = "Vulkan" ]; then popd; fi

  - if [ -z "${COVERAGE}" ]; then CMAKE_OPTIONS+=" -DWITH_EXAMPLES=ON -DWITH_EXTRA=ON -DWITH_TOOLS=ON"; fi
  - if [ -n "${COVERAGE}" ]; then CMAKE_OPTIONS+=" -DCOVERAGE=ON"; fi
  - cmake . $CMAKE_OPTIONS -DFIX_TRAVIS=ON -DWITH_TESTS=ON -DY_RENDERER=$RENDERER
  - cmake --build . -- -j2
  - cmake --build . --target check

after_success:
  - if [ -n "${COVERAGE}" ]; then bash <(curl -s https://codecov.io/bash) -x $GCOV -a "-s `pwd`"; fi

notifications:
  email: false
