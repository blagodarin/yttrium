version: 0.0.{build}-{branch}
image: Visual Studio 2019
shallow_clone: true

environment:
  matrix:

    - RENDERER: null
      CONFIG: Release
      ARCH: x86
      DLL: OFF
      TESTS: ON
      Y3: catch2,freetype,jpeg,vorbis
      BENCHMARK: ON
      PUBLISH: OFF

    - RENDERER: null
      CONFIG: Release
      ARCH: amd64
      DLL: OFF
      TESTS: ON
      Y3: catch2,freetype,jpeg,vorbis
      BENCHMARK: ON
      PUBLISH: OFF

    - RENDERER: opengl
      CONFIG: Release
      ARCH: amd64
      DLL: ON
      TESTS: ON
      Y3: catch2,freetype,vorbis,opengl
      BENCHMARK: OFF
      PUBLISH: ON

    - RENDERER: opengl
      CONFIG: Debug
      ARCH: amd64
      DLL: ON
      TESTS: ON
      Y3: catch2,freetype,vorbis,opengl
      BENCHMARK: OFF
      PUBLISH: OFF

    - RENDERER: opengl
      CONFIG: Release
      ARCH: amd64
      DLL: OFF
      TESTS: ON
      Y3: catch2,freetype,vorbis,opengl
      BENCHMARK: OFF
      PUBLISH: OFF

    - RENDERER: opengl
      CONFIG: Debug
      ARCH: amd64
      DLL: OFF
      TESTS: ON
      Y3: catch2,freetype,vorbis,opengl
      BENCHMARK: OFF
      PUBLISH: OFF

    # This job builds the project from Visual Studio solution generated by CMake.
    # It ensures it is a valid way to build Yttrium.
    - RENDERER: null
      CONFIG: Debug,Release
      ARCH: x86
      DLL: ON
      TESTS: OFF
      Y3: freetype,vorbis
      BENCHMARK: OFF
      PUBLISH: OFF

cache:
  - _3rdparty\.cache

install:
  - cmake --version
  - call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvarsall.bat" %ARCH%
  - set PREFIX_DIR=%APPVEYOR_BUILD_FOLDER%\_3rdparty
  - if not exist %PREFIX_DIR% mkdir %PREFIX_DIR%
  - cd %PREFIX_DIR%
  - cmake -DBUILD=%Y3% -DCONFIG=%CONFIG% -P %APPVEYOR_BUILD_FOLDER%\cmake\y3\get.cmake
  - if exist .build rmdir /s /q .build
  - if exist .trash rmdir /s /q .trash
  - if "%TESTS%"=="ON" cinst ninja

build_script:
  - set BUILD_DIR=%APPVEYOR_BUILD_FOLDER%\_build
  - set INSTALL_DIR=%APPVEYOR_BUILD_FOLDER%\_install
  - mkdir %BUILD_DIR% && cd %BUILD_DIR%
  - if "%TESTS%"=="ON" cmake -G Ninja %APPVEYOR_BUILD_FOLDER% -DBUILD_BENCHMARKS=%BENCHMARK% -DBUILD_EXAMPLES=ON -DBUILD_SHARED_LIBS=%DLL% -DBUILD_TESTS=%TESTS% -DCMAKE_BUILD_TYPE=%CONFIG% -DCMAKE_INSTALL_PREFIX=%INSTALL_DIR% -DCMAKE_PREFIX_PATH=%PREFIX_DIR% -DINSTALL_EXAMPLES=%PUBLISH% -DY_RENDERER=%RENDERER%
  - if "%TESTS%"=="ON" cmake --build .
  - if "%TESTS%"=="ON" cmake --build . --target install
  - if not "%TESTS%"=="ON" cmake -G "Visual Studio 16 2019" -A Win32 %APPVEYOR_BUILD_FOLDER% -DBUILD_BENCHMARKS=%BENCHMARK% -DBUILD_EXAMPLES=ON -DBUILD_SHARED_LIBS=%DLL% -DBUILD_TESTS=%TESTS% -DCMAKE_INSTALL_PREFIX=%INSTALL_DIR% -DCMAKE_PREFIX_PATH=%PREFIX_DIR% -DINSTALL_EXAMPLES=%PUBLISH% -DY_RENDERER=%RENDERER%
  - if not "%TESTS%"=="ON" cmake --build . --config Debug -- /nologo "/verbosity:minimal"
  - if not "%TESTS%"=="ON" cmake --build . --config Release -- /nologo "/verbosity:minimal"
  - if not "%TESTS%"=="ON" cmake --build . --config Release --target install -- /nologo "/verbosity:minimal"
  - cd %APPVEYOR_BUILD_FOLDER%
  - set BUILD_NAME=yttrium-%RENDERER%-%ARCH%
  - if "%PUBLISH%"=="ON" move %INSTALL_DIR% %BUILD_NAME%

test_script:
  - cd %BUILD_DIR%
  - if "%TESTS%"=="ON" ctest --output-on-failure
  - if "%BENCHMARK%"=="ON" cmake --build . --target benchmark

artifacts:
  - path: $(BUILD_NAME)
    type: zip
