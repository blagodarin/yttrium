cmake_minimum_required(VERSION 3.3)

string(REPLACE "," ";" PACKAGES ${BUILD})
set(BUILD_DIR ${CMAKE_BINARY_DIR}/build)
set(CACHE_DIR ${CMAKE_BINARY_DIR}/cache)
set(GENERATOR "Visual Studio 15 2017 Win64")

function(y_download _url _sha1)
  string(REGEX REPLACE "^.*/([^/]+)$" "\\1" _name ${_url})
  message(STATUS "Downloading ${_name}")
  set(_path ${CACHE_DIR}/${_name})
  if(EXISTS ${_path})
    file(SHA1 ${_path} _existing_sha1)
    if(${_sha1} STREQUAL ${_existing_sha1})
      return()
    endif()
    file(REMOVE ${_path})
  endif()
  file(DOWNLOAD ${_url} ${_path} TLS_VERIFY ON EXPECTED_HASH SHA1=${_sha1})
endfunction()

function(y_extract _name)
  file(MAKE_DIRECTORY ${BUILD_DIR})
  cmake_parse_arguments(_arg "" "DIR" "" ${ARGN})
  if(_arg_DIR AND EXISTS ${BUILD_DIR}/${_arg_DIR})
    message(STATUS "Removing ${_arg_DIR}")
    file(REMOVE_RECURSE ${_arg_DIR})
  endif()
  message(STATUS "Extracting ${_name}")
  execute_process(COMMAND ${CMAKE_COMMAND} -E tar xz ${CACHE_DIR}/${_name} WORKING_DIRECTORY ${BUILD_DIR})
endfunction()

macro(_y_add_package _package)
  if(_y_packages)
    set(_y_packages "${_y_packages};${_package}" PARENT_SCOPE)
  else()
    set(_y_packages "${_package}" PARENT_SCOPE)
  endif()
endmacro()

function(y_package _package)
  if("all" IN_LIST PACKAGES)
    _y_add_package(${_package})
  elseif(${_package} IN_LIST PACKAGES)
    cmake_parse_arguments(_arg "" "" "REQUIRES" ${ARGN})
    foreach(_dependency ${_arg_REQUIRES})
      if(NOT ${_dependency} IN_LIST _y_packages)
        list(APPEND _dependencies ${_dependency})
      endif()
    endforeach()
    if(_dependencies)
      set(PACKAGES "${PACKAGES};${_dependencies}" PARENT_SCOPE)
    endif()
    _y_add_package(${_package})
  endif()
endfunction()

y_package(libvorbis REQUIRES libogg)
y_package(libjpeg REQUIRES nasm)
y_package(libpng REQUIRES nasm zlib)
y_package(libogg)
y_package(nasm)
y_package(openal)
y_package(opengl)
y_package(zlib)

if("nasm" IN_LIST _y_packages)
  y_download("https://www.nasm.us/pub/nasm/releasebuilds/2.13.03/win64/nasm-2.13.03-win64.zip" "149a814fa53980976a7fc081231f59cfbcd02543")
  y_extract("nasm-2.13.03-win64.zip" DIR "nasm-2.13.03")
  file(INSTALL ${BUILD_DIR}/nasm-2.13.03/nasm.exe DESTINATION ${CMAKE_BINARY_DIR}/bin)
endif()

if("openal" IN_LIST _y_packages)
  y_download("https://openal.org/downloads/oalinst.zip" "45e08368c6755c58902b7746ff3e51ad2df8a8b8")
  y_download("http://openal-soft.org/openal-binaries/openal-soft-1.18.2-bin.zip" "0d2edd1b77cbb998f12e064d0eefea3508446776")
  y_extract("openal-soft-1.18.2-bin.zip")
  file(INSTALL ${BUILD_DIR}/openal-soft-1.18.2-bin/include DESTINATION ${CMAKE_BINARY_DIR})
  file(INSTALL ${BUILD_DIR}/openal-soft-1.18.2-bin/libs DESTINATION ${CMAKE_BINARY_DIR})
  y_extract("oalinst.zip")
  execute_process(COMMAND ${BUILD_DIR}/oalinst.exe /s)
endif()

if("zlib" IN_LIST _y_packages)
  y_download("https://zlib.net/zlib-1.2.11.tar.xz" "e1cb0d5c92da8e9a8c2635dfa249c341dfd00322")
  y_extract("zlib-1.2.11.tar.xz" DIR "zlib-1.2.11")
  set(_dir ${BUILD_DIR}/zlib-1.2.11)
  execute_process(COMMAND ${CMAKE_COMMAND} -G ${GENERATOR} ${_dir} -DCMAKE_INSTALL_PREFIX=${CMAKE_BINARY_DIR} -DSKIP_INSTALL_FILES=ON
    WORKING_DIRECTORY ${_dir})
  execute_process(COMMAND ${CMAKE_COMMAND} --build ${_dir} --config Release --target INSTALL -- /nologo /verbosity:minimal
    WORKING_DIRECTORY ${_dir})
endif()

if("libjpeg" IN_LIST _y_packages)
  y_download("https://downloads.sourceforge.net/project/libjpeg-turbo/1.5.3/libjpeg-turbo-1.5.3.tar.gz" "87ebf4cab2bb27fcb8e7ccb18ec4eb680e1f2c2d")
  y_extract("libjpeg-turbo-1.5.3.tar.gz" DIR "libjpeg-turbo-1.5.3")
endif()

if("libpng" IN_LIST _y_packages)
  y_download("https://downloads.sourceforge.net/project/libpng/libpng16/1.6.35/libpng-1.6.35.tar.xz" "0df1561aa1da610e892239348970d574b14deed0")
  y_extract("libpng-1.6.35.tar.xz" DIR "libpng-1.6.35")
endif()
